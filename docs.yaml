openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
  description: API for user authentication and management

servers:
  - url: https://api-auth-jwt-cookie.onrender.com/
    description: Production server

paths:
  /login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
          headers:
            Set-Cookie:
              schema:
                type: string
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized error'

  /logout:
    post:
      summary: User logout
      tags:
        - Authentication
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Logout successful'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: jwToken=; HttpOnly; Secure; SameSite=Lax; Max-Age=0

  /users:
    post:
      summary: Create a new user
      tags:
        - User Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'User registered'
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Bad request error'

  /users/{id}:
    get:
      summary: Get user by ID (Protected)
      tags:
        - User Management
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - cookieAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized error'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Not found error'

    put:
      summary: Update user (Protected, Self Only)
      tags:
        - User Management
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'User updated'
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                      username:
                        type: string
                        format: email
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
        '400':
          description: Bad request error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Bad request error'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized error'
        '403':
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Forbidden error'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Not found error'

    delete:
      summary: Delete user (Protected, Self Only)
      tags:
        - User Management
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - cookieAuth: []
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'User deleted'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Unauthorized error'
        '403':
          description: Forbidden error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Forbidden error'
        '404':
          description: Not found error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: 'Not found error'

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: jwToken
